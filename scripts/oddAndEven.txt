# mutually-recursive odd/even functions

# [1] must load core.txt before loading this file
# [2] test by creating an integer, say `intDef 4` then try `evalBool IsEven N4`

letrec
{
    let IsEven = \ n . (IsZero n) T (IsOdd  (Pred n));
    let IsOdd  = \ n . (IsZero n) F (IsEven (Pred n));
} :
{
    let T = True;
    let F = False;
}
